// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Programowanie_zaawansowane_zaliczenie;

namespace Programowanie_zaawansowane_zaliczenie.Migrations
{
    [DbContext(typeof(BloggingContext))]
    [Migration("20220519152829_Initialaatt")]
    partial class Initialaatt
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("Programowanie_zaawansowane_zaliczenie.Models.Adresses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("Programowanie_zaawansowane_zaliczenie.Models.ContactCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ContactCategories");
                });

            modelBuilder.Entity("Programowanie_zaawansowane_zaliczenie.Models.ContactVievModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AdressId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ContactCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FbLink")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AdressId");

                    b.HasIndex("ContactCategoryId");

                    b.ToTable("ContactVievModel");
                });

            modelBuilder.Entity("Programowanie_zaawansowane_zaliczenie.Models.ContactVievModel", b =>
                {
                    b.HasOne("Programowanie_zaawansowane_zaliczenie.Models.Adresses", "Adress")
                        .WithMany()
                        .HasForeignKey("AdressId");

                    b.HasOne("Programowanie_zaawansowane_zaliczenie.Models.ContactCategories", "ContactCategory")
                        .WithMany()
                        .HasForeignKey("ContactCategoryId");

                    b.Navigation("Adress");

                    b.Navigation("ContactCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
